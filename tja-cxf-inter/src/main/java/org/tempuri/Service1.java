package org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 * This class was generated by Apache CXF 3.1.8
 * 2017-10-10T10:05:00.278+08:00
 * Generated source version: 3.1.8
 * 
 */
@WebServiceClient(name = "Service1",
        wsdlLocation = "http://110.110.0.8:8001/Service1.asmx?wsdl",
        targetNamespace = "http://tempuri.org/")
public class Service1 extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://tempuri.org/", "Service1");
    public static final QName SERVICE1SOAP12 = new QName("http://tempuri.org/", "Service1Soap12");
    public static final QName SERVICE1SOAP = new QName("http://tempuri.org/", "Service1Soap");
    static {
        URL url = null;
        try {
            url = new URL("http://110.110.0.8:8001/Service1.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Service1.class.getName()).log(java.util.logging.Level.INFO,
                "Can not initialize the default wsdl from {0}", "http://110.110.0.8:8001/Service1.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Service1(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Service1(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Service1() {
        super(WSDL_LOCATION, SERVICE);
    }

    public Service1(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Service1(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Service1(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns Service1Soap
     */
    @WebEndpoint(name = "Service1Soap12")
    public Service1Soap getService1Soap12() {
        return super.getPort(SERVICE1SOAP12, Service1Soap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  
     *     Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Service1Soap
     */
    @WebEndpoint(name = "Service1Soap12")
    public Service1Soap getService1Soap12(WebServiceFeature... features) {
        return super.getPort(SERVICE1SOAP12, Service1Soap.class, features);
    }

    /**
     *
     * @return
     *     returns Service1Soap
     */
    @WebEndpoint(name = "Service1Soap")
    public Service1Soap getService1Soap() {
        return super.getPort(SERVICE1SOAP, Service1Soap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  
     *     Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Service1Soap
     */
    @WebEndpoint(name = "Service1Soap")
    public Service1Soap getService1Soap(WebServiceFeature... features) {
        return super.getPort(SERVICE1SOAP, Service1Soap.class, features);
    }

    public static void main(String[] args) {
        Service1 service1 = new Service1();
        Result result = null;

        System.out.println("+++++++++++++++++getItemWbsInfo+++++++++++++++++");
        String itemId = "ITM100SF";
        result = service1.getService1Soap().getItemWbsInfo(itemId);
        if (result != null && result.isIsSucc()) {
            JSONObject jsonObj = null;
            JSONObject jsonObject = new JSONObject(result.getValue());
            JSONArray jsonArray = jsonObject.getJSONArray("PrjPhases");
            for (int i = 0; i < jsonArray.length(); i++) {
                jsonObj = (JSONObject) jsonArray.get(i);
                System.out.println(ToStringBuilder.reflectionToString(jsonObj));
            }

            jsonArray = jsonObject.getJSONArray("SubEntrys");
            for (int i = 0; i < jsonArray.length(); i++) {
                jsonObj = (JSONObject) jsonArray.get(i);
                System.out.println(ToStringBuilder.reflectionToString(jsonObj));
            }

            jsonArray = jsonObject.getJSONArray("Majors");
            for (int i = 0; i < jsonArray.length(); i++) {
                jsonObj = (JSONObject) jsonArray.get(i);
                System.out.println(ToStringBuilder.reflectionToString(jsonObj));
            }

            jsonArray = jsonObject.getJSONArray("Users");
            for (int i = 0; i < jsonArray.length(); i++) {
                jsonObj = (JSONObject) jsonArray.get(i);
                System.out.println(ToStringBuilder.reflectionToString(jsonObj));
            }
        }

        System.out.println("+++++++++++++++++userLogin+++++++++++++++++");
        result = service1.getService1Soap().userLogin("abc", "123");
        if (result == null || !new Boolean(result.getValue())) {
            System.out.println("登录失败！");
        }

        System.out.println("+++++++++++++++++sendMessage+++++++++++++++++");
        result = service1.getService1Soap().sendMessage("测试发送消息接口", "1", "谢保平");
        if (result != null && result.isIsSucc()) {
            System.out.println("发送成功！");
        }

    }
}
